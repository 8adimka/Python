from functools import wraps

def my_decorator (arg):
    def real_decorator (func):
        @wraps(func)  # üéØ –∫–æ–ø–∏—Ä—É–µ—Ç –∏–º—è, –¥–æ–∫—Å—Ç—Ä–∏–Ω–≥, –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –∏ —Ç.–¥.
        def wrapper (*args, **kwargs): # –ú—ã –Ω–µ –ø–µ—Ä–µ–¥–∞—ë–º func –≤ wrapper –Ω–∞–ø—Ä—è–º—É—é, –Ω–æ –æ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ enclosure, –ø–æ—ç—Ç–æ–º—É –∏—Å–ø. –∫–∞–∫ free variable
            # free variable ‚Äî –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –Ω–µ–π —Ç.–∫. —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ enclosure
            print ('–î–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏')
            func(*args, **kwargs)
            print(f'–ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—á–∞—Ç–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ - {arg}')
        return wrapper
    return real_decorator

@my_decorator("üéâ –≠—Ç–æ –∞—Ä–≥—É–º–µ–Ω—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞!")
def some_func (a,b):
    print(f'–í–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏,\n–ø–µ—á–∞—Ç–∞–µ–º {a} –∏ {b}')

some_func('–ê—Ä–≥—É–º–µ–Ω—Ç—ã', 5)


print ('_________________________________________________')

def real_decorator (func):
    @wraps(func)  # üéØ –∫–æ–ø–∏—Ä—É–µ—Ç –∏–º—è, –¥–æ–∫—Å—Ç—Ä–∏–Ω–≥, –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –∏ —Ç.–¥.
    def wrapper (*args, **kwargs):
        print ('–î–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏')
        func(*args, **kwargs)
        print(f'–ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏!')
        # –ï—Å–ª–∏ func –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç, —Ç–æ –û–∫, –Ω–æ –µ—Å–ª–∏ –Ω–∞–¥–æ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç func, —Ç–æ
        # return func(*args, **kwargs)
        # –¥–∞–ª–µ–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º return wrapper, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–º–µ–Ω—è–µ—Ç —Å–æ–±–æ–π –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º—É—é func
        # my_func = real_decorator(my_func) -> —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ –¥–µ–∫–æ—Ä–∞—Ü–∏–∏ my_func —á–µ—Ä–µ–∑ @real_decorator
    return wrapper

@real_decorator
def some_func (a,b=5):
    print(f'–í–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏,\n–ø–µ—á–∞—Ç–∞–µ–º {a} –∏ {b}')

some_func('–ê—Ä–≥—É–º–µ–Ω—Ç—ã')

def repeat(n=5):
    def decorator(func):
        @wraps(func)  # üéØ –∫–æ–ø–∏—Ä—É–µ—Ç –∏–º—è, –¥–æ–∫—Å—Ç—Ä–∏–Ω–≥, –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –∏ —Ç.–¥.
        def wrapper(*args, **kwargs):
            for i in range(n):
                res = func(*args, **kwargs)
                return res
        return wrapper
    return decorator

@repeat(2)
def hello(name):
    print(f"Hello, {name}!")

hello("Vadim")

def hello(name='Julia'):
    print(f"Hello, {name}!")

repeat(1)(hello)()
repeat(3)(hello)("Max")

# üîÑ –†–∞–∑–æ–≤–∞—è –æ–±—ë—Ä—Ç–∫–∞ ‚Äî –≤—ã–∑–æ–≤–µ—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –≤—Ä—É—á–Ω—É—é:
wrapped_hello = repeat(3)(hello)  # —Å–Ω–∞—á–∞–ª–∞ repeat(3) ‚Üí –≤–µ—Ä–Ω—ë—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä ‚Üí –≤—ã–∑—ã–≤–∞–µ–º —Å hello

# –≤—ã–∑–æ–≤
wrapped_hello()

@real_decorator
def hello1(name):
    print(f"–ü—Ä–∏–≤–µ—Ç, {name}!")

#–≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ –ø—Ä—è–º–æ–º—É –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é —Ñ—É–Ω–∫—Ü–∏–∏
hello1 = real_decorator(hello1)

print ('______________________________________________')

def like_decor (func, *args, **kwargs):
    return func(*args, **kwargs)

some_func = like_decor(some_func('arg1', 'arg2'))
# –¢—ã –≥–æ–≤–æ—Ä–∏—à—å –≤—ã–∑–æ–≤–∏ —Å–µ–π—á–∞—Å –∂–µ —Ñ—É–Ω–∫—Ü–∏—é like_decor(some_func) —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø–µ—Ä–µ–¥–∞–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—é, –Ω–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã! –ò —Ä–µ–∑—É–ª—å—Ç–∞—Ç –µ—ë –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é some_func.
# –ë—É–¥–µ—Ç –æ—à–∏–±–∫–∞ –∏ —ç—Ç–æ –Ω–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä! –î–ª—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ –Ω—É–∂–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è wrapper –≤–Ω—É—Ç—Ä–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥–º–µ–Ω–∏—Ç –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º—É—é —Å–æ–±–æ–π.
# –ü—Ä–∞–≤–≤–∏–ª—å–Ω–æ –±—É–¥–µ—Ç —Ç–∞–∫:


def decor(func):
    def wrapper(*args, **kwargs):
        print("Before call")
        result = func(*args, **kwargs)
        print("After call")
        return result
    return wrapper

# —Ä—É—á–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
some_func = decor(some_func)

# –ò–ª–∏ –ª—É—á—à–µ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫ -
@decor
def some_func():
    print("Doing something")

